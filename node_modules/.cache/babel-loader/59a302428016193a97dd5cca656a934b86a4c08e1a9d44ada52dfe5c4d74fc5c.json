{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\portfolio\\\\src\\\\components\\\\Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { toast, ToastContainer } from 'react-toastify';\nimport './Contact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [isHuman, setIsHuman] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevent the default form submission\n\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"email\", email);\n    formData.append(\"message\", message);\n    try {\n      const response = await fetch(\"https://7cb11f0196db781a064b153f4af36d9a.m.pipedream.net\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        toast.success('Email successfully sent!', {\n          position: toast.POSITION.BOTTOM_LEFT,\n          pauseOnFocusLoss: false,\n          closeOnClick: true,\n          hideProgressBar: false,\n          toastId: 'succeeded'\n        });\n        // Clear the form after successful submission\n        setName('');\n        setEmail('');\n        setMessage('');\n        return /*#__PURE__*/_jsxDEV(ContainerSucces, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Thanks for getting in touch!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              window.scrollTo({\n                top: 0,\n                behavior: 'smooth'\n              });\n            },\n            children: \"Back to the top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this);\n      } else {\n        alert(\"Error submitting form\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Error submitting form\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"contact section\",\n    id: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact__container bd-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"contactForm\",\n        onSubmit: handleSubmit,\n        className: \"contact__form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          placeholder: \"Name\",\n          className: \"contact__input\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"Email\",\n          className: \"contact__input\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          placeholder: \"Message\",\n          className: \"contact__input\",\n          rows: \"10\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n          align: \"center\",\n          sitekey: \"6Lf15nwqAAAAAFPGUOE5N9U-TaoXhPS3iE7vujFo\",\n          onChange: e => {\n            setIsHuman(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !message || !isHuman,\n          className: \"contact__button button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"ZsqNp58lKrpabxFbBCBr9sSrz+Q=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","ReCAPTCHA","toast","ToastContainer","jsxDEV","_jsxDEV","Contact","_s","isHuman","setIsHuman","name","setName","email","setEmail","message","setMessage","handleSubmit","event","preventDefault","formData","FormData","append","response","fetch","method","body","ok","success","position","POSITION","BOTTOM_LEFT","pauseOnFocusLoss","closeOnClick","hideProgressBar","toastId","ContainerSucces","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","scrollTo","top","behavior","alert","error","console","className","id","onSubmit","type","placeholder","value","onChange","e","target","required","rows","align","sitekey","disabled","_c","$RefreshReg$"],"sources":["D:/projects/portfolio/src/components/Contact.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReCAPTCHA from 'react-google-recaptcha';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport './Contact'\r\n\r\nconst Contact = () => {\r\n  const [isHuman, setIsHuman] = useState(false)\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault(); // Prevent the default form submission\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"email\", email);\r\n    formData.append(\"message\", message);\r\n\r\n    try {\r\n      const response = await fetch(\"https://7cb11f0196db781a064b153f4af36d9a.m.pipedream.net\", {\r\n        method: \"POST\",\r\n        body: formData\r\n      });\r\n\r\n      if (response.ok) {\r\n        toast.success('Email successfully sent!', {\r\n          position: toast.POSITION.BOTTOM_LEFT,\r\n          pauseOnFocusLoss: false,\r\n          closeOnClick: true,\r\n          hideProgressBar: false,\r\n          toastId: 'succeeded',\r\n        });\r\n        // Clear the form after successful submission\r\n        setName('');\r\n        setEmail('');\r\n        setMessage('');\r\n      \r\n          return (\r\n            <ContainerSucces>\r\n              <h3>Thanks for getting in touch!</h3>\r\n              <button\r\n                onClick={() => {\r\n                  window.scrollTo({ top: 0, behavior: 'smooth' })\r\n                }}\r\n              >\r\n                Back to the top\r\n              </button>\r\n              <ToastContainer />\r\n            </ContainerSucces>\r\n          )\r\n      } else {\r\n        alert(\"Error submitting form\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(\"Error submitting form\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"contact section\" id=\"contact\">\r\n      <h2 className=\"section-title\">Contact</h2>\r\n\r\n      <div className=\"contact__container bd-grid\">\r\n        <form id=\"contactForm\" onSubmit={handleSubmit} className=\"contact__form\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            placeholder=\"Name\"\r\n            className=\"contact__input\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"contact__input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <textarea\r\n            id=\"message\"\r\n            placeholder=\"Message\"\r\n            className=\"contact__input\"\r\n            rows=\"10\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            required\r\n          ></textarea>\r\n          <ReCAPTCHA align=\"center\"\r\n          sitekey=\"6Lf15nwqAAAAAFPGUOE5N9U-TaoXhPS3iE7vujFo\"\r\n          onChange={(e) => {\r\n            setIsHuman(true)\r\n          }} \r\n        ></ReCAPTCHA>\r\n\r\n          <button type=\"submit\" disabled={!message || !isHuman} className=\"contact__button button\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}