{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\portfolio\\\\src\\\\components\\\\Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { ContainerSucces } from './ContactStyles';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [isHuman, setIsHuman] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"email\", email);\n    formData.append(\"message\", message);\n    try {\n      const response = await fetch(\"https://7cb11f0196db781a064b153f4af36d9a.m.pipedream.net\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (await response.ok) {\n        setSubmitted(true); // Set submitted state to true\n        setName('');\n        setEmail('');\n        setMessage('');\n        toast.success('Email successfully sent!', {\n          position: toast.POSITION.BOTTOM_LEFT,\n          pauseOnFocusLoss: false,\n          closeOnClick: true,\n          hideProgressBar: false,\n          toastId: 'succeeded'\n        });\n      } else {\n        throw new Error(\"Form submission error\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      toast.error(\"Error submitting form\");\n    }\n  };\n  return submitted ? /*#__PURE__*/_jsxDEV(ContainerSucces, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Thanks for getting in touch!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        window.scrollTo({\n          top: 0,\n          behavior: 'smooth'\n        });\n        setSubmitted(false);\n      },\n      className: \"contact__button\",\n      children: \"Back to the top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"contact section\",\n    id: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact__container bd-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"contactForm\",\n        onSubmit: handleSubmit,\n        className: \"contact__form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          placeholder: \"Name\",\n          className: \"contact__input\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"Email\",\n          className: \"contact__input\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          placeholder: \"Message\",\n          className: \"contact__input\",\n          rows: \"10\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n          align: \"center\",\n          sitekey: \"6Lf15nwqAAAAAFPGUOE5N9U-TaoXhPS3iE7vujFo\",\n          onChange: () => setIsHuman(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !message,\n          className: \"contact__button button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"ZY9ChypW4Jc8cYSak98jxaQPlRg=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","ReCAPTCHA","toast","ToastContainer","ContainerSucces","jsxDEV","_jsxDEV","Contact","_s","isHuman","setIsHuman","name","setName","email","setEmail","message","setMessage","submitted","setSubmitted","handleSubmit","event","preventDefault","formData","FormData","append","response","fetch","method","body","ok","success","position","POSITION","BOTTOM_LEFT","pauseOnFocusLoss","closeOnClick","hideProgressBar","toastId","Error","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","scrollTo","top","behavior","className","id","onSubmit","type","placeholder","value","onChange","e","target","required","rows","align","sitekey","disabled","_c","$RefreshReg$"],"sources":["D:/projects/portfolio/src/components/Contact.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReCAPTCHA from 'react-google-recaptcha';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport { ContainerSucces } from './ContactStyles';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Contact = () => {\r\n  const [isHuman, setIsHuman] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"email\", email);\r\n    formData.append(\"message\", message);\r\n\r\n    try {\r\n      const response = await fetch(\"https://7cb11f0196db781a064b153f4af36d9a.m.pipedream.net\", {\r\n        method: \"POST\",\r\n        body: formData\r\n      });\r\n\r\n      if (await response.ok) {\r\n        setSubmitted(true); // Set submitted state to true\r\n        setName('');\r\n        setEmail('');\r\n        setMessage('');\r\n\r\n        toast.success('Email successfully sent!', {\r\n          position: toast.POSITION.BOTTOM_LEFT,\r\n          pauseOnFocusLoss: false,\r\n          closeOnClick: true,\r\n          hideProgressBar: false,\r\n          toastId: 'succeeded',\r\n        });\r\n      } else {\r\n        throw new Error(\"Form submission error\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      toast.error(\"Error submitting form\");\r\n    }\r\n  };\r\n\r\n  return submitted ? (\r\n    <ContainerSucces>\r\n      <h3>Thanks for getting in touch!</h3>\r\n      <button\r\n        onClick={() => {\r\n          window.scrollTo({ top: 0, behavior: 'smooth' });\r\n          setSubmitted(false);\r\n        }} \r\n        className=\"contact__button\"\r\n      >\r\n        Back to the top\r\n      </button>\r\n      <ToastContainer />\r\n    </ContainerSucces>\r\n  ) : (\r\n    <section className=\"contact section\" id=\"contact\">\r\n      <h2 className=\"section-title\">Contact</h2>\r\n      <div className=\"contact__container bd-grid\">\r\n        <form id=\"contactForm\" onSubmit={handleSubmit} className=\"contact__form\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            placeholder=\"Name\"\r\n            className=\"contact__input\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"contact__input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <textarea\r\n            id=\"message\"\r\n            placeholder=\"Message\"\r\n            className=\"contact__input\"\r\n            rows=\"10\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            required\r\n          ></textarea>\r\n          <ReCAPTCHA\r\n            align=\"center\"\r\n            sitekey=\"6Lf15nwqAAAAAFPGUOE5N9U-TaoXhPS3iE7vujFo\"\r\n            onChange={() => setIsHuman(true)}\r\n          />\r\n          <button type=\"submit\" disabled={!message} className=\"contact__button button\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <ToastContainer />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}